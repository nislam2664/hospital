status = error
dest = err
name = PropertiesConfig

# Log files location
property.basePath = target/logs/

# Console name, pattern, threshold
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.disableAnsi = false
appender.console.layout.pattern = [%highlight{%-5level}{FATAL=bg_red, ERROR=red, WARN=yellow, INFO=green, DEBUG=cyan}] %style{%date{DEFAULT}}{magenta} [%style{%t}{yellow}] [%style{%logger{36}}{blue}] - %msg%n
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = debug

# RollingFileAppender name, pattern, path and rollover policy
appender.rolling.type = RollingFile
appender.rolling.name = RollingFile
appender.rolling.fileName= ${basePath}/backlog.log
appender.rolling.filePattern= ${basePath}/backlog_%d{yyyy-MM-dd-HH-mm}-%i.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern =  [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] [%l] - %msg%n
appender.rolling.policies.type = Policies
appender.rolling.filter.threshold.type = ThresholdFilter
appender.rolling.filter.threshold.level = debug

# RollingFileAppender rotation policy
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10MB
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 10
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified

# Delete all files older than 30 days
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Configure logger
logger.rolling = debug, RollingFile
logger.rolling.name = com.laba.solvd
logger.rolling.level = debug
logger.rolling.additivity = false
logger.rolling.appenderRef.rolling.ref = RollingFile

# Configure root logger
rootLogger.level = info, STDOUT
rootLogger.appenderRef.stdout.ref = STDOUT